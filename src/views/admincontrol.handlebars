<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Panel de Administración</title>
</head>
<body>
    <h1>Panel de Administración</h1>
    <h2>Usuarios</h2>

    <div id="user-list">
        <!-- Aquí se llenará con JavaScript -->
    </div>
    <div id="message"></div> <!-- Para mostrar mensajes de éxito o error -->

    <script>
    // Función para obtener la lista de usuarios
    async function fetchUsers() {
        try {
            const response = await fetch('/api/users'); // Hacemos la solicitud a la ruta correcta
            if (!response.ok) {
                throw new Error(`Error obteniendo usuarios: ${response.status}`);
            }

            const data = await response.json();
            renderUsers(data.payload); // Usa `payload` que viene en la respuesta
        } catch (error) {
            console.error('Error:', error);
        }
    }

    // Función para renderizar la lista de usuarios en el DOM
    function renderUsers(users) {
        const userList = document.getElementById('user-list');
        userList.innerHTML = ''; // Limpiar cualquier contenido previo
        users.forEach(user => {
            const userItem = document.createElement('div');
            userItem.innerHTML = `
                <p>${user.first_name || ''} ${user.last_name || ''} (${user.email})</p>
                <label for="role">Rol:</label>
                <select id="role-${user._id}" onchange="modifyUserRole('${user._id}', this.value)">
                    <option value="user" ${user.role === 'user' ? 'selected' : ''}>User</option>
                    <option value="admin" ${user.role === 'admin' ? 'selected' : ''}>Admin</option>
                    <option value="premium" ${user.role === 'premium' ? 'selected' : ''}>Premium</option>
                </select>   
            `;
            userList.appendChild(userItem);
        });
    }

    // Función para modificar el rol de un usuario
    const modifyUserRole = async (userId, newRole) => {
        try {
            if (!userId) {
                throw new Error('El ID de usuario es undefined');
            }
            const response = await fetch(`/api/users/${userId}/role`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ role: newRole }),
            });

            if (!response.ok) {
                throw new Error('Error modificando el rol');
            }

            const result = await response.json();
            document.getElementById('message').innerText = `Rol actualizado correctamente para el usuario con ID ${userId}`;
            console.log(result);
        } catch (error) {
            console.error('Error modificando el rol:', error);
            document.getElementById('message').innerText = `Error al modificar el rol del usuario con ID ${userId}`;
        }
    };

    // Llamada inicial para obtener la lista de usuarios al cargar la página
    fetchUsers();
    </script>
</body>
</html